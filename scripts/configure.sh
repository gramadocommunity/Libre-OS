#!/bin/bash



#Start of the script
echo "Welcome to the Libre-OS Configuration Script"
echo -n "What arch do you want to build for:"
echo "1.)iX86 2.)x86_64 3.)ARM"
read answer
if echo "$answer" | grep -iq "1" ;then
  arch="ix86"
elif echo "$answer" | grep -iq "2" ;then
  arch="x86_64"
else
  arch="ARM"
fi

echo -n "Do you want MultiThreading Support? (y/n)?"
read answer
if echo "$answer" | grep -iq "y" ;then
    mtEnabled="y"
else
    mtEnabled="n"
fi

echo -n "Do you want PAE Support? (y/n)?"
read answer
if echo "$answer" | grep -iq "y" ;then
    PAE="y"
else
    PAE="n"
fi

echo -n "Do you want a Verbose Kernel? (y/n)?"
printf "\n     Use this for extra output\n"
read answer
if echo "$answer" | grep -iq "y" ;then
    VK="y"
else
    VK="n"
fi

echo -n "Do you want a Verbose Kernel Keyboard?? (y/n)?"
printf "\n     Used to get input from keyboard (Raw scan codes). For a developer,"
echo "they are used to implement a more advanced terminal state."
echo "CAUTION: WILL FLOOD THE SCREEN WITH SCAN CODES, PLEASE BE ADVISED"
read answer
if echo "$answer" | grep -iq "y" ;then
    VKK="y"
else
    VKK="n"
fi
printf "\nGrabbing Version from scripts/version...\n"
VERS=$(<version)
printf "Version String : $VERS\n"
MAJOR="$(cut -d'.' -f1 <<<"$VERS")"
MINOR="$(cut -d'.' -f2 <<<"$VERS")"
BUG="$(cut -d'.' -f3 <<<"$VERS")"
TWEAK="$(cut -d'.' -f4 <<<"$VERS")"

#Configuring the header file
echo "#ifndef CONFIG_H_" > config.h.tmp
echo "#define CONFIG_H_" >> config.h.tmp
echo "" >> config.h.tmp
echo "/** Auto-generated by scripts/configure.sh DO NOT REMOVE**/" >> config.h.tmp
echo "" >> config.h.tmp
echo "/** Kernel Version **/" >> config.h.tmp
echo "#define VERSIONMAJOR $MAJOR" >> config.h.tmp
echo "#define VERSIONMINOR $MINOR" >> config.h.tmp
echo "#define VERSIONBUG $BUG" >> config.h.tmp
echo "#define VERSIONTWEAK $TWEAK" >> config.h.tmp
echo "#define VERSIONSTRING \"$VERS\"" >> config.h.tmp
echo "" >> config.h.tmp
echo "" >> config.h.tmp
echo "/** Architecture type **/" >> config.h.tmp
if echo "$arch" | grep -iq "ix86" ;then
  echo "#define __IX86__ 1" >> config.h.tmp
  echo "#undef __X86_64__" >> config.h.tmp
  echo "#undef __ARM__" >> config.h.tmp
  echo "" >> config.h.tmp

  if echo "$PAE" | grep -iq "y" ;then
    PAEstr="ix86 PAE enabled"
    echo "/** Architecture PAE Support **/" >> config.h.tmp
    echo "#define CONFIG_IX86_PAE_" >> config.h.tmp
    echo "#undef CONFIG_IX86_NON_PAE_" >>config.h.tmp
  else
    PAEstr="ix86 PAE not enabled"
    echo "/** Architecture PAE Support **/" >> config.h.tmp
    echo "#undef CONFIG_IX86_PAE_" >> config.h.tmp
    echo "#define CONFIG_IX86_NON_PAE_" >> config.h.tmp
  fi
  echo "" >> config.h.tmp
elif echo "$arch" | grep -iq "x86_64" ;then
  echo "#undef __IX86__" >> config.h.tmp
  echo "#define __X86_64__ 1" >> config.h.tmp
  echo "#undef __ARM__" >> config.h.tmp
else
  echo "#undef __IX86__" >> config.h.tmp
  echo "#undef __X86_64__" >> config.h.tmp
  echo "#define __ARM__ 1" >> config.h.tmp
fi
  echo "" >> config.h.tmp
echo "/**Multi-threading Enabled:**/" >> config.h.tmp
if echo "$mtEnabled" | grep -iq "y" ;then
  mtStr="MT_Enabled defined"
  echo "#define _MT_ENABLED 1" >> config.h.tmp
else
  mtStr="MT_Enabled undefined"
  echo "#undef _MT_ENABLED" >>config.h.tmp
fi
  echo "" >> config.h.tmp
echo "/**Verbose Kernel:**/" >> config.h.tmp
if echo "$VK" | grep -iq "y" ;then
  vkStr="Verbose Kernel defined"
  echo "#define CONFIG_VERBOSE_KERNEL" >> config.h.tmp
else
  vkStr="Verbose Kernel not defined"
  echo "#undef CONFIG_VERBOSE_KERNEL" >> config.h.tmp
fi
  echo "" >> config.h.tmp
echo "/**Verbose Kernel Keyboard:**/" >> config.h.tmp
if echo "$VKK" | grep -iq "y" ;then
  vkkStr="Verbose Kernel keyboard defined"
  echo "#define CONFIG_VERBOSE_KERNEL_KEYBOARD" >> config.h.tmp
else
  vkkStr="Verbose Kernel Kernel not defined"
  echo "#undef CONFIG_VERBOSE_KERNEL_KEYBOARD" >> config.h.tmp
fi
  echo "" >> config.h.tmp


#end the headerfile
echo "#endif //CONFIG_H_" >> config.h.tmp

if [ -f "$PWD/../include/config.h" ] ;then
  echo "Removing old config"
  rm ../include/config.h
fi


mv config.h.tmp ../include/config.h


echo "${arch}"
echo "$mtStr"
echo "$PAEstr"
echo "$vkStr"
echo "$vkkStr"
